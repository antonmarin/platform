---
version: '3.9'
services:
  server:
#    deploy:
#      resources:
#        reservations:
#          memory: 100M
#        limits:
#          memory: 1G
    restart: unless-stopped
    image: vaultwarden/server:1.34.3-alpine
    environment:
      SCHEMA:
      IS_TLS_ENABLED:
      ACME_HOSTNAME:
      ROUTE_HOSTNAME:
      DOMAIN: "${SCHEMA}://${ACME_HOSTNAME}"
      SIGNUPS_ALLOWED: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`${ROUTE_HOSTNAME}`) && Path(`/`)"
      - "traefik.http.routers.vaultwarden.tls=${IS_TLS_ENABLED}"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vaultwarden.tls.domains[0].main=${ROUTE_HOSTNAME}"
      - "traefik.http.routers.vaultwarden.tls.domains[0].sans[0]=${ACME_HOSTNAME}"
    volumes:
      - data:/data/
    networks:
      - ingress
#    ports:
#      - "80"
#      - "443"
#    depends_on:
#      database:
#        condition: service_healthy
#  database:
#    deploy:
#      resources:
#        reservations:
#          memory: 100M
#        limits:
#          memory: 1G
#    restart: unless-stopped
#    image: postgres:15-alpine
#    environment:
#      - PUID=${PUID} # plex
#      - PGID=${PGID} # storage.rw
#      - TZ=Europe/Moscow
#      - POSTGRES_USER=warden
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=warden
#    volumes:
#      - database:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U psono" ]
#      interval: 3s
#      retries: 30

volumes:
  data:
#  database:
networks:
  ingress:
    name: "ingress"
