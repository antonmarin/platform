---
version: '3.9'
services:
  server:
    deploy:
      replicas: 1
    #      resources:
#        reservations:
#          memory: 100M
#        limits:
#          memory: 1G
    restart: unless-stopped
    image: vaultwarden/server:1.34.3-alpine
    environment:
      # hosting
      SCHEMA:
      IS_TLS_ENABLED:
      ACME_HOSTNAME:
      ROUTE_HOSTNAME:
      DOMAIN: "${SCHEMA}://${ACME_HOSTNAME}"
      # authentication
      SIGNUPS_ALLOWED: "false"
      INVITATIONS_ALLOWED: "false"
      PASSWORD_HINTS_ALLOWED: "true"
      SHOW_PASSWORD_HINT: "false"
      # mgmt
      DISABLE_ADMIN_TOKEN: "false"
#      DATABASE_URL: "postgresql://[[user]:[password]@]host[:port][/database]"
      # smtp
      SMTP_HOST:
      SMTP_USERNAME:
      SMTP_PASSWORD:
      SMTP_TIMEOUT: "15"
      SMTP_SECURITY: "force_tls"
      SMTP_PORT: "465"
      SMTP_FROM: "klub.top@yandex.ru"
      SMTP_FROM_NAME: "КлубТоп"
      # logging
      LOG_LEVEL: "info"
      SMTP_DEBUG: "false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`${ROUTE_HOSTNAME}`)"
      - "traefik.http.routers.vaultwarden.tls=${IS_TLS_ENABLED}"
      - "traefik.http.routers.vaultwarden.tls.certresolver=letsencrypt"
      - "traefik.http.routers.vaultwarden.tls.domains[0].main=${ROUTE_HOSTNAME}"
      - "traefik.http.routers.vaultwarden.tls.domains[0].sans[0]=${ACME_HOSTNAME}"
    volumes:
      - data:/data/
    networks:
      - ingress
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--tries=1", "--spider", "http://127.0.0.1:80" ]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 1s
#    depends_on:
#      database:
#        condition: service_healthy
#  database:
#    deploy:
#      replicas: 1
#      resources:
#        reservations:
#          memory: 100M
#        limits:
#          memory: 1G
#    restart: unless-stopped
#    image: postgres:15-alpine
#    environment:
#      - PUID=${PUID} # plex
#      - PGID=${PGID} # storage.rw
#      - TZ=Europe/Moscow
#      - POSTGRES_USER=warden
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_DB=warden
#    volumes:
#      - database:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U psono" ]
#      interval: 3s
#      retries: 30

volumes:
  data:
#  database:
networks:
  ingress:
    name: "ingress"
