---
version: "3.9"

services:
  ingress:
    image: traefik:v2.2
    command:
      # Tells Traefik to listen to docker
      - --providers.docker
      # Enables the web UI
      - --api.insecure=${IS_WEB_UI_ENABLED}
      - --log.level=${LOG_LEVEL}
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.caserver=${ACME_CASERVER}
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - ingress
    environment:
      # https://doc.traefik.io/traefik/reference/static-configuration/env/
      - IS_WEB_UI_ENABLED
      - LOG_LEVEL
      - ACME_EMAIL
      - ACME_CASERVER
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  index:
    build: index/.
    pull_policy: build
    labels:
      - "traefik.http.routers.index.rule=Host(`${INDEX_HOSTNAME}`) && Path(`/`)"
      - "traefik.http.routers.index.tls=true"
      - "traefik.http.routers.index.tls.certresolver=letsencrypt"
    networks:
      - ingress
    environment:
      # https://doc.traefik.io/traefik/reference/static-configuration/env/
      - INDEX_HOSTNAME

networks:
  ingress:
    name: "ingress"
